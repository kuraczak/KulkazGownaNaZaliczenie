class robot
    +speed
    +accu_capacity
    +accu_battery_charge_time
    +pos(x,y)
    +start_pos(w obszarze pkt ładowania)
    +check_points_list
    +current_path
    -next_step()
        zmienia pixel na kolejny, jak ostatni to sym.calculate_path(...)
        

class symulacja
    +map
    +robots
    +time
    -constructor(map, number_of_robots, number_of_charge_stations, speed, accu_capacity, accu_batery_charge_time)
        pkt2robot()
        ustawienie start_pos na najbliższa przyporządkowanym punktom 
        wyliczenie calculate.path dla pierwszego punktu
    -calculate_path(p, robot)   
        sprawdza czy wystarczy aku na trasę i wyznacza ją: (kolejny punkt -> ladowanie), jak nie to trasa (aktualna_pozycja-> najbliższe ładowanie)
        //zwraca listę wspórzędnych 1->[x,y], 2->[x,y] itp
    -show()
        pokazanie mapy
        pokazanie aktualnej pozycji robotów
        pokazanie pozostałych punktów do odwiedzenia /inny kolor 
    -check_ready()
        foreach robot
            if akt_pos!=res_pos & current_path!=null
            return false
        return true
    -raport()
        dopisanie do pliku: ilosc_stacji_ladowania, parametry wszystkich robotów, czas całej symulacji 
    -step()
        while (!check_ready())
            foreach robot
                robot.next_step()
                show()
                wait()
                czas++

                
